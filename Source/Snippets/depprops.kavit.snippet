<CodeSnippet Format="1.0.0" xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <Header>
        <Title>Объявление/Инициализация свойства зависимости</Title>
        <Author>Крыцкий А.В.</Author>
        <Shortcut>свзи</Shortcut>
        <Description>Добавление набора объявления и инициализаци свойства зависимости</Description>
        <SnippetTypes>
            <SnippetType>Expansion</SnippetType>
            <SnippetType>SurroundsWith</SnippetType>
        </SnippetTypes>
    </Header>
    <Snippet>
        <Declarations>
			<Literal>
				<ID>fieldName</ID>
				<ToolTip>Имя поля</ToolTip>
			    <Default>Data</Default>
		    </Literal>
			<Literal>
				<ID>fieldType</ID>
				<ToolTip>Тип поля</ToolTip>
			    <Default>String</Default>
		    </Literal>
			<Literal>
				<ID>fieldDefaultValue</ID>
				<ToolTip>Значение по умолчанию</ToolTip>
			    <Default>DataDefaultValue</Default>
		    </Literal>
			<Literal>
				<ID>classType</ID>
				<ToolTip>Тип класса</ToolTip>
			    <Default>ClassType</Default>
		    </Literal>
        </Declarations>
        <Code Language="csharp">
            <![CDATA[
                // Объявление CLR-свойства
                public $fieldType$ $fieldName$
                {
                    get { return ($fieldType$)GetValue($fieldName$Property); }
                    set { SetValue($fieldName$Property, value); }
                }
                // Объявление WPF-свойства
                public static readonly DependencyProperty $fieldName$Property;
                // Инициализация
                $fieldName$Property = DependencyProperty.Register("$fieldName$", typeof($fieldType$), typeof($classType$),
                    new PropertyMetadata($fieldDefaultValue$, new PropertyChangedCallback(On$fieldName$PropertyChanged)));
                // Обработчик события "OnDataPropertyChanged"
                private static void On$fieldName$PropertyChanged(DependencyObject sender, DependencyPropertyChangedEventArgs e)
                {
                    $fieldType$ text = ($fieldType$)e.NewValue;
                    (($classType$)sender).Set$fieldName$(text);
                }
                private void Set$fieldName$($fieldType$ value)
                {
                    #warning Заполнить обработку
                }
                ]]>
        </Code>
    </Snippet>
</CodeSnippet>